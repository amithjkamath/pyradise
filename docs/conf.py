# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html
import os
import shutil
import sys

basedir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.insert(0, basedir)

# -- Copy example Jupyter notebooks for documentation building
shutil.copyfile(os.path.join(basedir, 'examples', 'conversion', 'dicom_to_nii.ipynb'),
                os.path.join(basedir, 'docs', 'examples.conversion.dicom_to_nii.ipynb'))

shutil.copyfile(os.path.join(basedir, 'examples', 'conversion', 'nii_to_dicom.ipynb'),
                os.path.join(basedir, 'docs', 'examples.conversion.nii_to_dicom.ipynb'))

shutil.copyfile(os.path.join(basedir, 'examples', 'inference', 'basic.ipynb'),
                os.path.join(basedir, 'docs', 'examples.inference.basic.ipynb'))

shutil.copyfile(os.path.join(basedir, 'examples', 'inference', 'container.ipynb'),
                os.path.join(basedir, 'docs', 'examples.inference.container.ipynb'))

shutil.copyfile(os.path.join(basedir, 'examples', 'conversion', 'modality_config_generation.ipynb'),
                os.path.join(basedir, 'docs', 'examples.conversion.modality_config_generation.ipynb'))


# -- Project information -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information

project = 'PyRaDiSe'
copyright = '2022, Elias Ruefenacht, ARTORG Center for Biomedical Engineering Research, University of Bern, Switzerland'
author = 'Elias Ruefenacht'
version = '0.1.0rc'
release = '0.1.0rc'


# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

extensions = ['sphinx.ext.autodoc',
              'sphinx.ext.autosummary',
              'sphinx.ext.coverage',
              'sphinx.ext.githubpages',
              'sphinx.ext.imgmath',
              'sphinx.ext.todo',
              'sphinx.ext.viewcode',
              'sphinx.ext.napoleon',
              'sphinx.ext.intersphinx',
              'nbsphinx',
              'sphinx_copybutton',
              'sphinx_toolbox.more_autodoc.autonamedtuple',
              'sphinx_autodoc_typehints']

# The suffix(es) of source filenames.
source_suffix = {'.rst': 'restructuredtext'}

# The master document.
master_doc = 'index'

# The root toctree document (containing the root toctree).
root_doc = 'index'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The primary domain.
primary_domain = 'py'

# Keep warnings
keep_warnings = False

# Suppress warnings
suppress_warnings = []

# Needs Sphinx version
needs_sphinx = '4.4'

# Enable figure numbering
numfig = True

# The figure numbering depth
numfig_secnum_depth = 0


# -- Options for internationalization ----------------------------------------
# The language for content autogenerated by Sphinx
language = 'en'


# -- Options for math  -------------------------------------------------------
# Math equations numbering
math_numfig = True


# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output

# The HTML theme
html_theme = 'pydata_sphinx_theme'

# The HTML logo
html_logo = None

# The static path for HTML output
html_static_path = ['_static']


# -- Options for autodoc -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html

# The order of the members in the documentation
autodoc_member_order = 'bysource'

# Mock imports
autodoc_mock_imports = ['SimpleITK', 'ITK', 'pydicom', 'opencv']

# Indicates if the module names should be included in the documentation
add_module_names = False


# -- Options for napoleon extension ------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html

# Use the :ivar: role for instance variables
napoleon_use_ivar = True

# Use the Google docstring style
napoleon_google_docstring = True

# Use the admonition for examples
napoleon_use_admonition_for_examples = True

# Use the admonition for notes
napoleon_use_admonition_for_notes = True

# Use the admonition for references
napoleon_use_admonition_for_references = True


# -- Options for nbsphinx ----------------------------------------------------
# https://nbsphinx.readthedocs.io/en/0.8.9/usage.html#Sphinx-Configuration-Values

# Do not block the building process if error occurs during building
nbsphinx_allow_errors = True


# -- Options for intersphinx extension ---------------------------------------
# https://www.sphinx-doc.org/en/master/usage/extensions/intersphinx.html

# External library mapping
intersphinx_mapping = {'SimpleITK': {'https://simpleitk.org/doxygen', './_static/simpleitk_inv.txt'},
                       'ITK': ('https://itkpythonpackage.readthedocs.io/en/master/', None),
                       'pydicom': ('https://pydicom.github.io/pydicom/stable/', None)}


intersphinx_aliases = {
    ("py:class", "click.core.Group"):
        ("py:class", "click.Group"),
    ("py:class", "click.core.Command"):
        ("py:class", "click.Command"),
}


def add_intersphinx_aliases_to_inv(app):
    from sphinx.ext.intersphinx import InventoryAdapter
    inventories = InventoryAdapter(app.builder.env)

    for alias, target in app.config.intersphinx_aliases.items():
        alias_domain, alias_name = alias
        target_domain, target_name = target
        try:
            found = inventories.main_inventory[target_domain][target_name]
            try:
                inventories.main_inventory[alias_domain][alias_name] = found
            except KeyError:
                print("could not add to inv")
                continue
        except KeyError:
            print("missed :(")
            continue


def setup(app):
    app.add_config_value("intersphinx_aliases", {}, "env")
    app.connect("builder-inited", add_intersphinx_aliases_to_inv)
